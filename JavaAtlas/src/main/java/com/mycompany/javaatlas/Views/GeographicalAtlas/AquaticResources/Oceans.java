/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.javaatlas.Views.GeographicalAtlas.AquaticResources;

import Core.Services.FileReaderService;
import com.mycompany.javaatlas.MainForm;
import com.mycompany.javaatlas.Views.GeographicalAtlas.AquaticResourcesView;

/**
 *
 * @author user
 */
public class Oceans extends javax.swing.JFrame {
    private String _address;
    private FileReaderService _fileReaderService = new FileReaderService();
    
    /**
     * Creates new form Oceans
     */
    public Oceans() {
        _address = new MainForm().getAddress();
        initComponents();
        oceanName.setText("Виберіть один з океанів\nщоб прочитаии детальну інформацію");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        verticalScroll = new javax.swing.JScrollPane();
        content = new javax.swing.JTextArea();
        oceanName = new javax.swing.JLabel();
        icon1 = new javax.swing.JLabel();
        icon2 = new javax.swing.JLabel();
        pacificOcean = new javax.swing.JButton();
        atlanticOcean = new javax.swing.JButton();
        indianOcean = new javax.swing.JButton();
        arcticOcean = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        title.setText("Океани світу");

        content.setColumns(20);
        content.setRows(5);
        verticalScroll.setViewportView(content);

        oceanName.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        oceanName.setText(" ");

        pacificOcean.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pacificOcean.setText("Тихий океан");
        pacificOcean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacificOceanActionPerformed(evt);
            }
        });

        atlanticOcean.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        atlanticOcean.setText("Атлантичний океан");
        atlanticOcean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atlanticOceanActionPerformed(evt);
            }
        });

        indianOcean.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        indianOcean.setText("Індійський океан");
        indianOcean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indianOceanActionPerformed(evt);
            }
        });

        arcticOcean.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        arcticOcean.setText("Північний Льодовиковий океан");
        arcticOcean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arcticOceanActionPerformed(evt);
            }
        });

        back.setText("Назад");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pacificOcean, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(atlanticOcean, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(indianOcean, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(arcticOcean))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(oceanName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(icon2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(icon1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(verticalScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(377, 377, 377))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(oceanName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(icon1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(icon2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(verticalScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arcticOcean)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pacificOcean)
                        .addComponent(atlanticOcean)
                        .addComponent(indianOcean)))
                .addGap(18, 18, 18)
                .addComponent(back)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pacificOceanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacificOceanActionPerformed
        // TODO add your handling code here:
        content.append(_fileReaderService.getFile(_address + "Resources/Oceans/pacificOcean.txt"));
        oceanName.setText("Тихий океан");
        icon1.setIcon(new javax.swing.ImageIcon(_address + "Images/Oceans/pacificOcean1.jpeg"));
        icon2.setIcon(new javax.swing.ImageIcon(_address + "Images/Oceans/pacificOcean2.jpg"));
    }//GEN-LAST:event_pacificOceanActionPerformed

    private void atlanticOceanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atlanticOceanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atlanticOceanActionPerformed

    private void indianOceanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indianOceanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_indianOceanActionPerformed

    private void arcticOceanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arcticOceanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arcticOceanActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        var aquaticResources = new AquaticResourcesView();
        aquaticResources.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Oceans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Oceans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Oceans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Oceans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Oceans().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton arcticOcean;
    private javax.swing.JButton atlanticOcean;
    private javax.swing.JButton back;
    private javax.swing.JTextArea content;
    private javax.swing.JLabel icon1;
    private javax.swing.JLabel icon2;
    private javax.swing.JButton indianOcean;
    private javax.swing.JLabel oceanName;
    private javax.swing.JButton pacificOcean;
    private javax.swing.JLabel title;
    private javax.swing.JScrollPane verticalScroll;
    // End of variables declaration//GEN-END:variables
}
